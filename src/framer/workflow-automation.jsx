// @ts-nocheck
/* eslint-disable */
/* This file was generated by Unframer for Framer project a8d1bf1754323587 "Xtract Template (copy)", do not edit manually */
"use client";

/**
 * @typedef Locale
 * string
 */

/**
 * @typedef {{
 * children?: React.ReactNode
 * locale?: Locale
 * style?: React.CSSProperties
 * className?: string
 * id?: string
 * ref?: any
 * width?: any
 * height?: any
 * layoutId?: string
}} Props

 */

/**
 * @type {import("unframer").UnframerBreakpoint}
 * Represents a responsive breakpoint for unframer.
 */

/**
 * @typedef VariantsMap
 * Partial record of UnframerBreakpoint to Props.variant, with a mandatory 'base' key.
 * { [key in UnframerBreakpoint]?: Props['variant'] } & { base: Props['variant'] }
 */
import {
	className as className2,
	css as css2,
	fonts as fonts2,
} from "./chunks/chunk-65IXOGL7.js";
import { className, css, fonts } from "./chunks/chunk-OHXJNQ4I.js";
import { Icon } from "./chunks/chunk-IXDMRUES.js";
import "./chunks/chunk-BVM6H744.js";
import { routes } from "./chunks/chunk-A46GJBWP.js";

// virtual:workflow-automation
import { Fragment as Fragment2 } from "react";
import { ContextProviders } from "unframer";

// /:https://framer.com/m/workflow-automation-cW1t.js
import { jsx as _jsx2, jsxs as _jsxs2 } from "react/jsx-runtime";
import {
	addFonts,
	ComponentViewportProvider,
	cx,
	getFonts,
	getFontsFromSharedStyle,
	RichText,
	SmartComponentScopedContainer,
	useComponentViewport,
	useLocaleInfo,
	useVariantState,
	withCSS,
} from "unframer";
import {
	LayoutGroup as LayoutGroup2,
	motion as motion2,
	MotionConfigContext,
} from "unframer";
import * as React from "react";
import { useRef as useRef2 } from "react";

// /:https://framerusercontent.com/modules/B2xAlJLcN0gOnt11mSPw/jyRNgY7vYWXe6t31T0wo/Ticker.js
import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import {
	Children,
	useLayoutEffect,
	useEffect,
	useState,
	useRef,
	useMemo,
	useCallback,
	cloneElement,
} from "react";
import { addPropertyControls, ControlType, RenderTarget } from "unframer";
import {
	useReducedMotion,
	LayoutGroup,
	useInView,
	useMotionValue,
	useTransform,
	motion,
	frame,
} from "unframer";
import { resize } from "@motionone/dom";
var MAX_DUPLICATED_ITEMS = 100;
var directionTransformers = {
	left: (offset) => `translateX(-${offset}px)`,
	right: (offset) => `translateX(${offset}px)`,
	top: (offset) => `translateY(-${offset}px)`,
	bottom: (offset) => `translateY(${offset}px)`,
};
function Ticker(props) {
	let {
		slots = [],
		gap,
		padding,
		paddingPerSide,
		paddingTop,
		paddingRight,
		paddingBottom,
		paddingLeft,
		speed,
		hoverFactor,
		direction,
		alignment,
		sizingOptions,
		fadeOptions,
		style,
	} = props;
	const { fadeContent, overflow, fadeWidth, fadeInset, fadeAlpha } =
		fadeOptions;
	const { widthType, heightType } = sizingOptions;
	const paddingValue = paddingPerSide
		? `${paddingTop}px ${paddingRight}px ${paddingBottom}px ${paddingLeft}px`
		: `${padding}px`;
	const currentTarget = RenderTarget.current();
	const isCanvas =
		currentTarget === RenderTarget.canvas ||
		currentTarget === RenderTarget.export;
	const filteredSlots = slots.filter(Boolean);
	const numChildren = Children.count(filteredSlots);
	const hasChildren = numChildren > 0;
	if (direction === true) {
		direction = "left";
	}
	const isHorizontal = direction === "left" || direction === "right";
	const offset = useMotionValue(0);
	const transformer = directionTransformers[direction];
	const transform = useTransform(offset, transformer);
	const parentRef = useRef(null);
	const childrenRef = useMemo(() => {
		return [
			{
				current: null,
			},
			{
				current: null,
			},
		];
	}, []);
	const [size, setSize] = useState({
		parent: null,
		children: null,
	});
	let clonedChildren = null;
	let dupedChildren = [];
	let duplicateBy = 0;
	let opacity = 0;
	if (isCanvas) {
		duplicateBy = numChildren ? Math.floor(10 / numChildren) : 0;
		opacity = 1;
	}
	if (!isCanvas && hasChildren && size.parent) {
		duplicateBy = Math.round((size.parent / size.children) * 2) + 1;
		duplicateBy = Math.min(duplicateBy, MAX_DUPLICATED_ITEMS);
		opacity = 1;
	}
	const measure = useCallback(() => {
		if (hasChildren && parentRef.current) {
			const parentLength = isHorizontal
				? parentRef.current.offsetWidth
				: parentRef.current.offsetHeight;
			const start = childrenRef[0].current
				? isHorizontal
					? childrenRef[0].current.offsetLeft
					: childrenRef[0].current.offsetTop
				: 0;
			const end = childrenRef[1].current
				? isHorizontal
					? childrenRef[1].current.offsetLeft +
						childrenRef[1].current.offsetWidth
					: childrenRef[1].current.offsetTop +
						childrenRef[1].current.offsetHeight
				: 0;
			const childrenLength = end - start + gap;
			setSize({
				parent: parentLength,
				children: childrenLength,
			});
		}
	}, []);
	const childrenStyles = isCanvas
		? {
				contentVisibility: "auto",
			}
		: {};
	if (hasChildren) {
		if (!isCanvas) {
			let initialResize = useRef(true);
			useLayoutEffect(() => {
				frame.read(measure, false, true);
				return resize(parentRef.current, ({ contentSize }) => {
					if (
						!initialResize.current &&
						(contentSize.width || contentSize.height)
					) {
						frame.read(measure, false, true);
					}
					initialResize.current = false;
				});
			}, []);
		}
		clonedChildren = Children.map(filteredSlots, (child, index) => {
			let ref;
			if (index === 0) {
				ref = childrenRef[0];
			}
			if (index === filteredSlots.length - 1) {
				ref = childrenRef[1];
			}
			const size2 = {
				width: widthType ? child.props?.width : "100%",
				height: heightType ? child.props?.height : "100%",
			};
			return (
				<LayoutGroup inherit={"id"}>
					<li ref={ref} style={size2}>
						{
							/* @__PURE__ */ cloneElement(
								child,
								{
									style: {
										...child.props?.style,
										...size2,
										flexShrink: 0,
										...childrenStyles,
									},
									layoutId: child.props.layoutId
										? child.props.layoutId + "-original-" + index
										: void 0,
								},
								child.props?.children,
							)
						}
					</li>
				</LayoutGroup>
			);
		});
	}
	const isInView = isCanvas ? true : useInView(parentRef);
	if (!isCanvas) {
		for (let i = 0; i < duplicateBy; i++) {
			dupedChildren = dupedChildren.concat(
				Children.map(filteredSlots, (child, childIndex) => {
					const size2 = {
						width: widthType ? child.props?.width : "100%",
						height: heightType ? child.props?.height : "100%",
						willChange: !isInView ? void 0 : "transform",
					};
					return (
						<LayoutGroup inherit={"id"}>
							<li style={size2} aria-hidden={true}>
								{
									/* @__PURE__ */ cloneElement(
										child,
										{
											key: i + " " + childIndex,
											style: {
												...child.props?.style,
												width: widthType ? child.props?.width : "100%",
												height: heightType ? child.props?.height : "100%",
												flexShrink: 0,
												...childrenStyles,
											},
											layoutId: child.props.layoutId
												? child.props.layoutId + "-dupe-" + i
												: void 0,
										},
										child.props?.children,
									)
								}
							</li>
						</LayoutGroup>
					);
				}),
			);
		}
	}
	const animateToValue =
		size.children + size.children * Math.round(size.parent / size.children);
	const initialTime = useRef(null);
	const prevTime = useRef(null);
	const xOrY = useRef(0);
	const isHover = useRef(false);
	const isReducedMotion = useReducedMotion();
	const listRef = useRef(null);
	const animationRef = useRef(null);
	if (!isCanvas) {
		useEffect(() => {
			if (isReducedMotion || !animateToValue || !speed) {
				return;
			}
			animationRef.current = listRef.current.animate(
				{
					transform: [transformer(0), transformer(animateToValue)],
				},
				{
					duration: (Math.abs(animateToValue) / speed) * 1e3,
					iterations: Infinity,
					easing: "linear",
				},
			);
			return () => animationRef.current.cancel();
		}, [hoverFactor, animateToValue, speed]);
		const playOrPause = useCallback(() => {
			if (!animationRef.current) return;
			const hidden = document.hidden;
			if (isInView && !hidden && animationRef.current.playState === "paused") {
				animationRef.current.play();
			} else if (
				(!isInView || hidden) &&
				animationRef.current.playState === "running"
			) {
				animationRef.current.pause();
			}
		}, [isInView]);
		useEffect(() => {
			playOrPause();
		}, [isInView, hoverFactor, animateToValue, speed]);
		useEffect(() => {
			document.addEventListener("visibilitychange", playOrPause);
			return () => {
				document.removeEventListener("visibilitychange", playOrPause);
			};
		}, [playOrPause]);
	}
	const fadeDirection = isHorizontal ? "to right" : "to bottom";
	const fadeWidthStart = fadeWidth / 2;
	const fadeWidthEnd = 100 - fadeWidth / 2;
	const fadeInsetStart = clamp(fadeInset, 0, fadeWidthStart);
	const fadeInsetEnd = 100 - fadeInset;
	const fadeMask = `linear-gradient(${fadeDirection}, rgba(0, 0, 0, ${fadeAlpha}) ${fadeInsetStart}%, rgba(0, 0, 0, 1) ${fadeWidthStart}%, rgba(0, 0, 0, 1) ${fadeWidthEnd}%, rgba(0, 0, 0, ${fadeAlpha}) ${fadeInsetEnd}%)`;
	if (!hasChildren) {
		return (
			<section style={placeholderStyles}>
				<div style={emojiStyles}>{"\u2728"}</div>
				<p style={titleStyles}>{"Connect to Content"}</p>
				<p style={subtitleStyles}>
					{"Add layers or components to infinitely loop on your page."}
				</p>
			</section>
		);
	}
	return (
		<section
			style={{
				...containerStyle,
				opacity,
				WebkitMaskImage: fadeContent ? fadeMask : void 0,
				maskImage: fadeContent ? fadeMask : void 0,
				overflow: overflow ? "visible" : "hidden",
				padding: paddingValue,
			}}
			ref={parentRef}
		>
			<motion.ul
				ref={listRef}
				style={{
					...containerStyle,
					gap,
					top:
						direction === "bottom" && isValidNumber(animateToValue)
							? -animateToValue
							: void 0,
					left:
						direction === "right" && isValidNumber(animateToValue)
							? -animateToValue
							: void 0,
					placeItems: alignment,
					position: "relative",
					flexDirection: isHorizontal ? "row" : "column",
					...style,
					willChange: isCanvas || !isInView ? "auto" : "transform",
					transform: transformer(0),
				}}
				onMouseEnter={() => {
					isHover.current = true;
					if (animationRef.current) {
						animationRef.current.playbackRate = hoverFactor;
					}
				}}
				onMouseLeave={() => {
					isHover.current = false;
					if (animationRef.current) {
						animationRef.current.playbackRate = 1;
					}
				}}
			>
				{clonedChildren}
				{dupedChildren}
			</motion.ul>
		</section>
	);
}
Ticker.defaultProps = {
	gap: 10,
	padding: 10,
	sizingOptions: {
		widthType: true,
		heightType: true,
	},
	fadeOptions: {
		fadeContent: true,
		overflow: false,
		fadeWidth: 25,
		fadeAlpha: 0,
		fadeInset: 0,
	},
	direction: true,
};
addPropertyControls(Ticker, {
	slots: {
		type: ControlType.Array,
		title: "Children",
		control: {
			type: ControlType.ComponentInstance,
		},
	},
	speed: {
		type: ControlType.Number,
		title: "Speed",
		min: 0,
		max: 1e3,
		defaultValue: 100,
		unit: "%",
		displayStepper: true,
		step: 5,
	},
	direction: {
		type: ControlType.Enum,
		title: "Direction",
		options: ["left", "right", "top", "bottom"],
		optionIcons: [
			"direction-left",
			"direction-right",
			"direction-up",
			"direction-down",
		],
		optionTitles: ["Left", "Right", "Top", "Bottom"],
		defaultValue: "left",
		displaySegmentedControl: true,
	},
	alignment: {
		type: ControlType.Enum,
		title: "Align",
		options: ["flex-start", "center", "flex-end"],
		optionIcons: {
			direction: {
				right: ["align-top", "align-middle", "align-bottom"],
				left: ["align-top", "align-middle", "align-bottom"],
				top: ["align-left", "align-center", "align-right"],
				bottom: ["align-left", "align-center", "align-right"],
			},
		},
		defaultValue: "center",
		displaySegmentedControl: true,
	},
	gap: {
		type: ControlType.Number,
		title: "Gap",
	},
	padding: {
		title: "Padding",
		type: ControlType.FusedNumber,
		toggleKey: "paddingPerSide",
		toggleTitles: ["Padding", "Padding per side"],
		valueKeys: ["paddingTop", "paddingRight", "paddingBottom", "paddingLeft"],
		valueLabels: ["T", "R", "B", "L"],
		min: 0,
	},
	sizingOptions: {
		type: ControlType.Object,
		title: "Sizing",
		controls: {
			widthType: {
				type: ControlType.Boolean,
				title: "Width",
				enabledTitle: "Auto",
				disabledTitle: "Stretch",
				defaultValue: true,
			},
			heightType: {
				type: ControlType.Boolean,
				title: "Height",
				enabledTitle: "Auto",
				disabledTitle: "Stretch",
				defaultValue: true,
			},
		},
	},
	fadeOptions: {
		type: ControlType.Object,
		title: "Clipping",
		controls: {
			fadeContent: {
				type: ControlType.Boolean,
				title: "Fade",
				defaultValue: true,
			},
			overflow: {
				type: ControlType.Boolean,
				title: "Overflow",
				enabledTitle: "Show",
				disabledTitle: "Hide",
				defaultValue: false,
				hidden(props) {
					return props.fadeContent === true;
				},
			},
			fadeWidth: {
				type: ControlType.Number,
				title: "Width",
				defaultValue: 25,
				min: 0,
				max: 100,
				unit: "%",
				hidden(props) {
					return props.fadeContent === false;
				},
			},
			fadeInset: {
				type: ControlType.Number,
				title: "Inset",
				defaultValue: 0,
				min: 0,
				max: 100,
				unit: "%",
				hidden(props) {
					return props.fadeContent === false;
				},
			},
			fadeAlpha: {
				type: ControlType.Number,
				title: "Opacity",
				defaultValue: 0,
				min: 0,
				max: 1,
				step: 0.05,
				hidden(props) {
					return props.fadeContent === false;
				},
			},
		},
	},
	hoverFactor: {
		type: ControlType.Number,
		title: "Hover",
		min: 0,
		max: 1,
		unit: "x",
		defaultValue: 1,
		step: 0.1,
		displayStepper: true,
		description: "Slows down the speed while you are hovering.",
	},
});
var containerStyle = {
	display: "flex",
	width: "100%",
	height: "100%",
	maxWidth: "100%",
	maxHeight: "100%",
	placeItems: "center",
	margin: 0,
	padding: 0,
	listStyleType: "none",
	textIndent: "none",
};
var placeholderStyles = {
	display: "flex",
	width: "100%",
	height: "100%",
	placeContent: "center",
	placeItems: "center",
	flexDirection: "column",
	color: "#96F",
	background: "rgba(136, 85, 255, 0.1)",
	fontSize: 11,
	overflow: "hidden",
	padding: "20px 20px 30px 20px",
};
var emojiStyles = {
	fontSize: 32,
	marginBottom: 10,
};
var titleStyles = {
	margin: 0,
	marginBottom: 10,
	fontWeight: 600,
	textAlign: "center",
};
var subtitleStyles = {
	margin: 0,
	opacity: 0.7,
	maxWidth: 150,
	lineHeight: 1.5,
	textAlign: "center",
};
var clamp = (num, min, max) => Math.min(Math.max(num, min), max);
var isValidNumber = (value) => typeof value === "number" && !isNaN(value);

// /:https://framer.com/m/workflow-automation-cW1t.js
var PhosphorFonts = getFonts(Icon);
var TickerFonts = getFonts(Ticker);
var serializationHash = "framer-ExwGD";
var variantClassNames = {
	UYN6aPHi4: "framer-v-ln3v1j",
};
var transition1 = {
	bounce: 0.2,
	delay: 0,
	duration: 0.4,
	type: "spring",
};
var Transition = ({ value, children }) => {
	const config = React.useContext(MotionConfigContext);
	const transition = value ?? config.transition;
	const contextValue = React.useMemo(
		() => ({
			...config,
			transition,
		}),
		[JSON.stringify(transition)],
	);
	return (
		<MotionConfigContext.Provider value={contextValue}>
			{children}
		</MotionConfigContext.Provider>
	);
};
var Variants = motion2.create(React.Fragment);
var getProps = ({ height, id, width, ...props }) => {
	return {
		...props,
	};
};
var createLayoutDependency = (props, variants) => {
	if (props.layoutDependency)
		return variants.join("-") + props.layoutDependency;
	return variants.join("-");
};
var Component = /* @__PURE__ */ React.forwardRef(function (props, ref) {
	const fallbackRef = useRef2(null);
	const refBinding = ref ?? fallbackRef;
	const defaultLayoutId = React.useId();
	const { activeLocale, setLocale } = useLocaleInfo();
	const componentViewport = useComponentViewport();
	const {
		style,
		className: className3,
		layoutId,
		variant,
		...restProps
	} = getProps(props);
	const {
		baseVariant,
		classNames,
		clearLoadingGesture,
		gestureHandlers,
		gestureVariant,
		isLoading,
		setGestureState,
		setVariant,
		variants,
	} = useVariantState({
		defaultVariant: "UYN6aPHi4",
		ref: refBinding,
		variant,
		variantClassNames,
	});
	const layoutDependency = createLayoutDependency(props, variants);
	const sharedStyleClassNames = [className2, className];
	const scopingClassNames = cx(serializationHash, ...sharedStyleClassNames);
	return (
		<LayoutGroup2 id={layoutId ?? defaultLayoutId}>
			<Variants animate={variants} initial={false}>
				<Transition value={transition1}>
					<motion2.div
						{...restProps}
						{...gestureHandlers}
						className={cx(
							scopingClassNames,
							"framer-ln3v1j",
							className3,
							classNames,
						)}
						data-border={true}
						data-framer-name={"workflow automation"}
						layoutDependency={layoutDependency}
						layoutId={"UYN6aPHi4"}
						ref={refBinding}
						style={{
							"--border-bottom-width": "1px",
							"--border-color": "rgb(34, 34, 34)",
							"--border-left-width": "1px",
							"--border-right-width": "1px",
							"--border-style": "solid",
							"--border-top-width": "1px",
							backgroundColor:
								"var(--token-aae92d1e-1be4-447e-8038-565c6944f982, rgb(0, 0, 0))",
							borderTopLeftRadius: 12,
							borderTopRightRadius: 12,
							...style,
						}}
					>
						<motion2.div
							className={"framer-1rxw0h2"}
							data-framer-name={"Container"}
							layoutDependency={layoutDependency}
							layoutId={"uLJBKkTjM"}
						>
							<motion2.div
								className={"framer-tlv8nn"}
								data-border={true}
								data-framer-name={"Top bar"}
								layoutDependency={layoutDependency}
								layoutId={"p2K6pfgDn"}
								style={{
									"--border-bottom-width": "1px",
									"--border-color": "rgb(34, 34, 34)",
									"--border-left-width": "1px",
									"--border-right-width": "1px",
									"--border-style": "solid",
									"--border-top-width": "1px",
									backgroundColor:
										"var(--token-cfb0af42-62a5-486a-837b-9870b5e7030b, rgba(255, 255, 255, 0.05))",
									borderBottomLeftRadius: 3,
									borderBottomRightRadius: 3,
									borderTopLeftRadius: 3,
									borderTopRightRadius: 3,
								}}
							>
								<motion2.div
									className={"framer-1ra5exm"}
									data-border={true}
									data-framer-name={"All task"}
									layoutDependency={layoutDependency}
									layoutId={"PteBDZkor"}
									style={{
										"--border-bottom-width": "1px",
										"--border-color":
											"var(--token-313dd4d6-9859-4bdd-889b-954a849d13e3, rgb(34, 34, 34))",
										"--border-left-width": "1px",
										"--border-right-width": "1px",
										"--border-style": "solid",
										"--border-top-width": "1px",
										backgroundColor:
											"var(--token-cfb0af42-62a5-486a-837b-9870b5e7030b, rgba(255, 255, 255, 0.05))",
										borderBottomLeftRadius: 2,
										borderBottomRightRadius: 2,
										borderTopLeftRadius: 2,
										borderTopRightRadius: 2,
									}}
								>
									<RichText
										__fromCanvasComponent={true}
										className={"framer-130kjbj"}
										fonts={["Inter"]}
										layoutDependency={layoutDependency}
										layoutId={"OEuN13S6b"}
										style={{
											"--framer-link-text-color": "rgb(0, 153, 255)",
											"--framer-link-text-decoration": "underline",
										}}
										verticalAlignment={"top"}
										withExternalLayout={true}
									>
										<React.Fragment>
											<motion2.p
												className={"framer-styles-preset-1kdv3c8"}
												data-styles-preset={"PDoVxFHq4"}
											>
												{"All Tasks"}
											</motion2.p>
										</React.Fragment>
									</RichText>
								</motion2.div>
								<motion2.div
									className={"framer-1316b2o"}
									data-framer-name={"Waiting for approval"}
									layoutDependency={layoutDependency}
									layoutId={"k01h9oJ3b"}
									style={{
										borderBottomLeftRadius: 2,
										borderBottomRightRadius: 2,
										borderTopLeftRadius: 2,
										borderTopRightRadius: 2,
									}}
								>
									<RichText
										__fromCanvasComponent={true}
										className={"framer-1xhq8t5"}
										fonts={["Inter"]}
										layoutDependency={layoutDependency}
										layoutId={"vrcL3L1BR"}
										style={{
											"--framer-link-text-color": "rgb(0, 153, 255)",
											"--framer-link-text-decoration": "underline",
										}}
										verticalAlignment={"top"}
										withExternalLayout={true}
									>
										<React.Fragment>
											<motion2.p
												className={"framer-styles-preset-1kdv3c8"}
												data-styles-preset={"PDoVxFHq4"}
											>
												{"Waiting for approval"}
											</motion2.p>
										</React.Fragment>
									</RichText>
								</motion2.div>
							</motion2.div>
							<ComponentViewportProvider>
								<SmartComponentScopedContainer
									className={"framer-1d7mg51-container"}
									isAuthoredByUser={true}
									isModuleExternal={true}
									layoutDependency={layoutDependency}
									layoutId={"jBekt5qB1-container"}
									nodeId={"jBekt5qB1"}
									rendersWithMotion={true}
									scopeId={"jdFmL_6Wy"}
								>
									<Ticker
										alignment={"center"}
										direction={"top"}
										fadeOptions={{
											fadeAlpha: 0,
											fadeContent: true,
											fadeInset: 0,
											fadeWidth: 25,
											overflow: false,
										}}
										gap={10}
										height={"100%"}
										hoverFactor={1}
										id={"jBekt5qB1"}
										layoutId={"jBekt5qB1"}
										padding={10}
										paddingBottom={10}
										paddingLeft={0}
										paddingPerSide={true}
										paddingRight={0}
										paddingTop={10}
										sizingOptions={{
											heightType: true,
											widthType: false,
										}}
										slots={[
											<motion2.div
												className={"framer-1jg53mx"}
												data-border={true}
												data-framer-name={"Task1"}
												layoutDependency={layoutDependency}
												layoutId={"L1DILpqwn"}
												style={{
													"--border-bottom-width": "1px",
													"--border-color": "rgb(34, 34, 34)",
													"--border-left-width": "1px",
													"--border-right-width": "1px",
													"--border-style": "solid",
													"--border-top-width": "1px",
													borderBottomLeftRadius: 4,
													borderBottomRightRadius: 4,
													borderTopLeftRadius: 4,
													borderTopRightRadius: 4,
												}}
											>
												<motion2.div
													className={"framer-taqqe6"}
													data-framer-name={"container"}
													layoutDependency={layoutDependency}
													layoutId={"KDi7iLN7O"}
												>
													<motion2.div
														className={"framer-1i179ot"}
														data-framer-name={"Icon holder"}
														layoutDependency={layoutDependency}
														layoutId={"lOQ7geZeY"}
														style={{
															backgroundColor:
																"var(--token-cfb0af42-62a5-486a-837b-9870b5e7030b, rgba(255, 255, 255, 0.05))",
															borderBottomLeftRadius: 4,
															borderBottomRightRadius: 4,
															borderTopLeftRadius: 4,
															borderTopRightRadius: 4,
														}}
													>
														<ComponentViewportProvider>
															<SmartComponentScopedContainer
																className={"framer-5gi9jc-container"}
																inComponentSlot={true}
																isAuthoredByUser={true}
																isModuleExternal={true}
																layoutDependency={layoutDependency}
																layoutId={"p69ZhUrNp-container"}
																nodeId={"p69ZhUrNp"}
																rendersWithMotion={true}
																scopeId={"jdFmL_6Wy"}
															>
																<Icon
																	color={
																		"var(--token-ea3f5ec2-80ec-412c-a26e-34872584c90c, rgb(255, 255, 255))"
																	}
																	height={"100%"}
																	iconSearch={"dollar"}
																	iconSelection={"House"}
																	id={"p69ZhUrNp"}
																	layoutId={"p69ZhUrNp"}
																	mirrored={false}
																	selectByList={false}
																	style={{
																		height: "100%",
																		width: "100%",
																	}}
																	weight={"regular"}
																	width={"100%"}
																/>
															</SmartComponentScopedContainer>
														</ComponentViewportProvider>
													</motion2.div>
													<motion2.div
														className={"framer-1inctpy"}
														data-framer-name={"task and status"}
														layoutDependency={layoutDependency}
														layoutId={"ULorCZaM7"}
													>
														<RichText
															__fromCanvasComponent={true}
															className={"framer-58oy1g"}
															fonts={["Inter"]}
															layoutDependency={layoutDependency}
															layoutId={"GjpAjR6xv"}
															style={{
																"--framer-link-text-color": "rgb(0, 153, 255)",
																"--framer-link-text-decoration": "underline",
															}}
															verticalAlignment={"top"}
															withExternalLayout={true}
														>
															<React.Fragment>
																<motion2.p
																	className={"framer-styles-preset-1kdv3c8"}
																	data-styles-preset={"PDoVxFHq4"}
																>
																	{"Payroll management"}
																</motion2.p>
															</React.Fragment>
														</RichText>
														<RichText
															__fromCanvasComponent={true}
															className={"framer-1x1c25t"}
															fonts={["Inter"]}
															layoutDependency={layoutDependency}
															layoutId={"RRs30cZHs"}
															style={{
																"--framer-link-text-color": "rgb(0, 153, 255)",
																"--framer-link-text-decoration": "underline",
															}}
															verticalAlignment={"top"}
															withExternalLayout={true}
														>
															<React.Fragment>
																<motion2.p
																	className={"framer-styles-preset-11j7728"}
																	data-styles-preset={"nWaHBmz7N"}
																>
																	{"Due on 2nd july"}
																</motion2.p>
															</React.Fragment>
														</RichText>
													</motion2.div>
												</motion2.div>
												<motion2.div
													className={"framer-3hzraq"}
													data-border={true}
													data-framer-name={"Icon holder"}
													layoutDependency={layoutDependency}
													layoutId={"QagpQbXB8"}
													style={{
														"--border-bottom-width": "1px",
														"--border-color": "rgb(34, 34, 34)",
														"--border-left-width": "1px",
														"--border-right-width": "1px",
														"--border-style": "solid",
														"--border-top-width": "1px",
														backgroundColor:
															"var(--token-cfb0af42-62a5-486a-837b-9870b5e7030b, rgba(255, 255, 255, 0.05))",
														borderBottomLeftRadius: 4,
														borderBottomRightRadius: 4,
														borderTopLeftRadius: 4,
														borderTopRightRadius: 4,
													}}
												>
													<ComponentViewportProvider>
														<SmartComponentScopedContainer
															className={"framer-15vkavw-container"}
															inComponentSlot={true}
															isAuthoredByUser={true}
															isModuleExternal={true}
															layoutDependency={layoutDependency}
															layoutId={"mB9xZKReA-container"}
															nodeId={"mB9xZKReA"}
															rendersWithMotion={true}
															scopeId={"jdFmL_6Wy"}
														>
															<Icon
																color={"rgba(129, 74, 200, 0.6)"}
																height={"100%"}
																iconSearch={"clock"}
																iconSelection={"House"}
																id={"mB9xZKReA"}
																layoutId={"mB9xZKReA"}
																mirrored={false}
																selectByList={false}
																style={{
																	height: "100%",
																	width: "100%",
																}}
																weight={"bold"}
																width={"100%"}
															/>
														</SmartComponentScopedContainer>
													</ComponentViewportProvider>
												</motion2.div>
											</motion2.div>,
											<motion2.div
												className={"framer-s1hkb1"}
												data-border={true}
												data-framer-name={"Task 2"}
												layoutDependency={layoutDependency}
												layoutId={"gDJs5M_FD"}
												style={{
													"--border-bottom-width": "1px",
													"--border-color": "rgb(34, 34, 34)",
													"--border-left-width": "1px",
													"--border-right-width": "1px",
													"--border-style": "solid",
													"--border-top-width": "1px",
													borderBottomLeftRadius: 4,
													borderBottomRightRadius: 4,
													borderTopLeftRadius: 4,
													borderTopRightRadius: 4,
												}}
											>
												<motion2.div
													className={"framer-1mbts4n"}
													data-framer-name={"container"}
													layoutDependency={layoutDependency}
													layoutId={"BpqXCVcar"}
												>
													<motion2.div
														className={"framer-wvvrw1"}
														data-framer-name={"Icon holder"}
														layoutDependency={layoutDependency}
														layoutId={"cOsNw3yg6"}
														style={{
															backgroundColor:
																"var(--token-cfb0af42-62a5-486a-837b-9870b5e7030b, rgba(255, 255, 255, 0.05))",
															borderBottomLeftRadius: 4,
															borderBottomRightRadius: 4,
															borderTopLeftRadius: 4,
															borderTopRightRadius: 4,
														}}
													>
														<ComponentViewportProvider>
															<SmartComponentScopedContainer
																className={"framer-dgyp8x-container"}
																inComponentSlot={true}
																isAuthoredByUser={true}
																isModuleExternal={true}
																layoutDependency={layoutDependency}
																layoutId={"UCNMFKzvz-container"}
																nodeId={"UCNMFKzvz"}
																rendersWithMotion={true}
																scopeId={"jdFmL_6Wy"}
															>
																<Icon
																	color={
																		"var(--token-ea3f5ec2-80ec-412c-a26e-34872584c90c, rgb(255, 255, 255))"
																	}
																	height={"100%"}
																	iconSearch={"users"}
																	iconSelection={"House"}
																	id={"UCNMFKzvz"}
																	layoutId={"UCNMFKzvz"}
																	mirrored={false}
																	selectByList={false}
																	style={{
																		height: "100%",
																		width: "100%",
																	}}
																	weight={"regular"}
																	width={"100%"}
																/>
															</SmartComponentScopedContainer>
														</ComponentViewportProvider>
													</motion2.div>
													<motion2.div
														className={"framer-njueev"}
														data-framer-name={"task and status"}
														layoutDependency={layoutDependency}
														layoutId={"Fi3I09S5h"}
													>
														<RichText
															__fromCanvasComponent={true}
															className={"framer-i0zldt"}
															fonts={["Inter"]}
															layoutDependency={layoutDependency}
															layoutId={"axiFeDX8m"}
															style={{
																"--framer-link-text-color": "rgb(0, 153, 255)",
																"--framer-link-text-decoration": "underline",
															}}
															verticalAlignment={"top"}
															withExternalLayout={true}
														>
															<React.Fragment>
																<motion2.p
																	className={"framer-styles-preset-1kdv3c8"}
																	data-styles-preset={"PDoVxFHq4"}
																>
																	{"Employee Tracking"}
																</motion2.p>
															</React.Fragment>
														</RichText>
														<RichText
															__fromCanvasComponent={true}
															className={"framer-ua59wv"}
															fonts={["Inter"]}
															layoutDependency={layoutDependency}
															layoutId={"raGO6erzr"}
															style={{
																"--framer-link-text-color": "rgb(0, 153, 255)",
																"--framer-link-text-decoration": "underline",
															}}
															verticalAlignment={"top"}
															withExternalLayout={true}
														>
															<React.Fragment>
																<motion2.p
																	className={"framer-styles-preset-11j7728"}
																	data-styles-preset={"nWaHBmz7N"}
																>
																	{"2 days ago"}
																</motion2.p>
															</React.Fragment>
														</RichText>
													</motion2.div>
												</motion2.div>
												<motion2.div
													className={"framer-1ebeee5"}
													data-border={true}
													data-framer-name={"Icon holder"}
													layoutDependency={layoutDependency}
													layoutId={"oqdwvLCdV"}
													style={{
														"--border-bottom-width": "1px",
														"--border-color": "rgb(34, 34, 34)",
														"--border-left-width": "1px",
														"--border-right-width": "1px",
														"--border-style": "solid",
														"--border-top-width": "1px",
														backgroundColor:
															"var(--token-cfb0af42-62a5-486a-837b-9870b5e7030b, rgba(255, 255, 255, 0.05))",
														borderBottomLeftRadius: 4,
														borderBottomRightRadius: 4,
														borderTopLeftRadius: 4,
														borderTopRightRadius: 4,
													}}
												>
													<ComponentViewportProvider>
														<SmartComponentScopedContainer
															className={"framer-1k66nx3-container"}
															inComponentSlot={true}
															isAuthoredByUser={true}
															isModuleExternal={true}
															layoutDependency={layoutDependency}
															layoutId={"COuRrgj6Q-container"}
															nodeId={"COuRrgj6Q"}
															rendersWithMotion={true}
															scopeId={"jdFmL_6Wy"}
														>
															<Icon
																color={"rgba(129, 74, 200, 0.6)"}
																height={"100%"}
																iconSearch={"check"}
																iconSelection={"House"}
																id={"COuRrgj6Q"}
																layoutId={"COuRrgj6Q"}
																mirrored={false}
																selectByList={false}
																style={{
																	height: "100%",
																	width: "100%",
																}}
																weight={"bold"}
																width={"100%"}
															/>
														</SmartComponentScopedContainer>
													</ComponentViewportProvider>
												</motion2.div>
											</motion2.div>,
											<motion2.div
												className={"framer-g7r1jk"}
												data-border={true}
												data-framer-name={"Task 3"}
												layoutDependency={layoutDependency}
												layoutId={"a1_UDzzwJ"}
												style={{
													"--border-bottom-width": "1px",
													"--border-color": "rgb(34, 34, 34)",
													"--border-left-width": "1px",
													"--border-right-width": "1px",
													"--border-style": "solid",
													"--border-top-width": "1px",
													borderBottomLeftRadius: 4,
													borderBottomRightRadius: 4,
													borderTopLeftRadius: 4,
													borderTopRightRadius: 4,
												}}
											>
												<motion2.div
													className={"framer-1cmp3d"}
													data-framer-name={"container"}
													layoutDependency={layoutDependency}
													layoutId={"B5xX9fXea"}
												>
													<motion2.div
														className={"framer-jm9llk"}
														data-framer-name={"Icon holder"}
														layoutDependency={layoutDependency}
														layoutId={"QiTgEFLpl"}
														style={{
															backgroundColor:
																"var(--token-cfb0af42-62a5-486a-837b-9870b5e7030b, rgba(255, 255, 255, 0.05))",
															borderBottomLeftRadius: 4,
															borderBottomRightRadius: 4,
															borderTopLeftRadius: 4,
															borderTopRightRadius: 4,
														}}
													>
														<ComponentViewportProvider>
															<SmartComponentScopedContainer
																className={"framer-43qumr-container"}
																inComponentSlot={true}
																isAuthoredByUser={true}
																isModuleExternal={true}
																layoutDependency={layoutDependency}
																layoutId={"MpWOD3GCr-container"}
																nodeId={"MpWOD3GCr"}
																rendersWithMotion={true}
																scopeId={"jdFmL_6Wy"}
															>
																<Icon
																	color={
																		"var(--token-ea3f5ec2-80ec-412c-a26e-34872584c90c, rgb(255, 255, 255))"
																	}
																	height={"100%"}
																	iconSearch={"notepad"}
																	iconSelection={"House"}
																	id={"MpWOD3GCr"}
																	layoutId={"MpWOD3GCr"}
																	mirrored={false}
																	selectByList={false}
																	style={{
																		height: "100%",
																		width: "100%",
																	}}
																	weight={"regular"}
																	width={"100%"}
																/>
															</SmartComponentScopedContainer>
														</ComponentViewportProvider>
													</motion2.div>
													<motion2.div
														className={"framer-h01jhb"}
														data-framer-name={"title and status"}
														layoutDependency={layoutDependency}
														layoutId={"j1ocBPP9y"}
													>
														<RichText
															__fromCanvasComponent={true}
															className={"framer-1desya7"}
															fonts={["Inter"]}
															layoutDependency={layoutDependency}
															layoutId={"FjApTt37h"}
															style={{
																"--framer-link-text-color": "rgb(0, 153, 255)",
																"--framer-link-text-decoration": "underline",
															}}
															verticalAlignment={"top"}
															withExternalLayout={true}
														>
															<React.Fragment>
																<motion2.p
																	className={"framer-styles-preset-1kdv3c8"}
																	data-styles-preset={"PDoVxFHq4"}
																>
																	{"Social media post"}
																</motion2.p>
															</React.Fragment>
														</RichText>
														<RichText
															__fromCanvasComponent={true}
															className={"framer-13ozhny"}
															fonts={["Inter"]}
															layoutDependency={layoutDependency}
															layoutId={"UOLzzx0lN"}
															style={{
																"--framer-link-text-color": "rgb(0, 153, 255)",
																"--framer-link-text-decoration": "underline",
															}}
															verticalAlignment={"top"}
															withExternalLayout={true}
														>
															<React.Fragment>
																<motion2.p
																	className={"framer-styles-preset-11j7728"}
																	data-styles-preset={"nWaHBmz7N"}
																>
																	{"Cancelled by user"}
																</motion2.p>
															</React.Fragment>
														</RichText>
													</motion2.div>
												</motion2.div>
												<motion2.div
													className={"framer-1vkltkk"}
													data-border={true}
													data-framer-name={"Icon holder"}
													layoutDependency={layoutDependency}
													layoutId={"PHvEu0R8X"}
													style={{
														"--border-bottom-width": "1px",
														"--border-color": "rgb(34, 34, 34)",
														"--border-left-width": "1px",
														"--border-right-width": "1px",
														"--border-style": "solid",
														"--border-top-width": "1px",
														backgroundColor:
															"var(--token-cfb0af42-62a5-486a-837b-9870b5e7030b, rgba(255, 255, 255, 0.05))",
														borderBottomLeftRadius: 4,
														borderBottomRightRadius: 4,
														borderTopLeftRadius: 4,
														borderTopRightRadius: 4,
													}}
												>
													<ComponentViewportProvider>
														<SmartComponentScopedContainer
															className={"framer-krulsk-container"}
															inComponentSlot={true}
															isAuthoredByUser={true}
															isModuleExternal={true}
															layoutDependency={layoutDependency}
															layoutId={"jK5jrqrP5-container"}
															nodeId={"jK5jrqrP5"}
															rendersWithMotion={true}
															scopeId={"jdFmL_6Wy"}
														>
															<Icon
																color={"rgba(129, 74, 200, 0.6)"}
																height={"100%"}
																iconSearch={"x"}
																iconSelection={"House"}
																id={"jK5jrqrP5"}
																layoutId={"jK5jrqrP5"}
																mirrored={false}
																selectByList={false}
																style={{
																	height: "100%",
																	width: "100%",
																}}
																weight={"bold"}
																width={"100%"}
															/>
														</SmartComponentScopedContainer>
													</ComponentViewportProvider>
												</motion2.div>
											</motion2.div>,
											<motion2.div
												className={"framer-12l9wgx"}
												data-border={true}
												data-framer-name={"Task 4"}
												layoutDependency={layoutDependency}
												layoutId={"YLVXFHbzb"}
												style={{
													"--border-bottom-width": "1px",
													"--border-color": "rgb(34, 34, 34)",
													"--border-left-width": "1px",
													"--border-right-width": "1px",
													"--border-style": "solid",
													"--border-top-width": "1px",
													borderBottomLeftRadius: 4,
													borderBottomRightRadius: 4,
													borderTopLeftRadius: 4,
													borderTopRightRadius: 4,
												}}
											>
												<motion2.div
													className={"framer-1yxzbnf"}
													data-framer-name={"container"}
													layoutDependency={layoutDependency}
													layoutId={"LxQojRnRO"}
												>
													<motion2.div
														className={"framer-1ucnb9s"}
														data-framer-name={"Icon holder"}
														layoutDependency={layoutDependency}
														layoutId={"QpG7_E1q1"}
														style={{
															backgroundColor:
																"var(--token-cfb0af42-62a5-486a-837b-9870b5e7030b, rgba(255, 255, 255, 0.05))",
															borderBottomLeftRadius: 4,
															borderBottomRightRadius: 4,
															borderTopLeftRadius: 4,
															borderTopRightRadius: 4,
														}}
													>
														<ComponentViewportProvider>
															<SmartComponentScopedContainer
																className={"framer-18irzxm-container"}
																inComponentSlot={true}
																isAuthoredByUser={true}
																isModuleExternal={true}
																layoutDependency={layoutDependency}
																layoutId={"uX_gqhc0y-container"}
																nodeId={"uX_gqhc0y"}
																rendersWithMotion={true}
																scopeId={"jdFmL_6Wy"}
															>
																<Icon
																	color={
																		"var(--token-ea3f5ec2-80ec-412c-a26e-34872584c90c, rgb(255, 255, 255))"
																	}
																	height={"100%"}
																	iconSearch={"list"}
																	iconSelection={"House"}
																	id={"uX_gqhc0y"}
																	layoutId={"uX_gqhc0y"}
																	mirrored={false}
																	selectByList={false}
																	style={{
																		height: "100%",
																		width: "100%",
																	}}
																	weight={"regular"}
																	width={"100%"}
																/>
															</SmartComponentScopedContainer>
														</ComponentViewportProvider>
													</motion2.div>
													<motion2.div
														className={"framer-1g5ja9s"}
														data-framer-name={"task and status"}
														layoutDependency={layoutDependency}
														layoutId={"lLq9dSFev"}
													>
														<RichText
															__fromCanvasComponent={true}
															className={"framer-15m8jkk"}
															fonts={["Inter"]}
															layoutDependency={layoutDependency}
															layoutId={"caHBICfdD"}
															style={{
																"--framer-link-text-color": "rgb(0, 153, 255)",
																"--framer-link-text-decoration": "underline",
															}}
															verticalAlignment={"top"}
															withExternalLayout={true}
														>
															<React.Fragment>
																<motion2.p
																	className={"framer-styles-preset-1kdv3c8"}
																	data-styles-preset={"PDoVxFHq4"}
																>
																	{"Lead list "}
																</motion2.p>
															</React.Fragment>
														</RichText>
														<RichText
															__fromCanvasComponent={true}
															className={"framer-cf54ro"}
															fonts={["Inter"]}
															layoutDependency={layoutDependency}
															layoutId={"acr9GvCgY"}
															style={{
																"--framer-link-text-color": "rgb(0, 153, 255)",
																"--framer-link-text-decoration": "underline",
															}}
															verticalAlignment={"top"}
															withExternalLayout={true}
														>
															<React.Fragment>
																<motion2.p
																	className={"framer-styles-preset-11j7728"}
																	data-styles-preset={"nWaHBmz7N"}
																>
																	{"70% prepared"}
																</motion2.p>
															</React.Fragment>
														</RichText>
													</motion2.div>
												</motion2.div>
												<motion2.div
													className={"framer-vganpr"}
													data-border={true}
													data-framer-name={"Icon holder"}
													layoutDependency={layoutDependency}
													layoutId={"CQgzEiZP5"}
													style={{
														"--border-bottom-width": "1px",
														"--border-color": "rgb(34, 34, 34)",
														"--border-left-width": "1px",
														"--border-right-width": "1px",
														"--border-style": "solid",
														"--border-top-width": "1px",
														backgroundColor:
															"var(--token-cfb0af42-62a5-486a-837b-9870b5e7030b, rgba(255, 255, 255, 0.05))",
														borderBottomLeftRadius: 4,
														borderBottomRightRadius: 4,
														borderTopLeftRadius: 4,
														borderTopRightRadius: 4,
													}}
												>
													<ComponentViewportProvider>
														<SmartComponentScopedContainer
															className={"framer-1d4948u-container"}
															inComponentSlot={true}
															isAuthoredByUser={true}
															isModuleExternal={true}
															layoutDependency={layoutDependency}
															layoutId={"VhlleIoOe-container"}
															nodeId={"VhlleIoOe"}
															rendersWithMotion={true}
															scopeId={"jdFmL_6Wy"}
														>
															<Icon
																color={"rgba(129, 74, 200, 0.6)"}
																height={"100%"}
																iconSearch={"spinner"}
																iconSelection={"House"}
																id={"VhlleIoOe"}
																layoutId={"VhlleIoOe"}
																mirrored={false}
																selectByList={false}
																style={{
																	height: "100%",
																	width: "100%",
																}}
																weight={"bold"}
																width={"100%"}
															/>
														</SmartComponentScopedContainer>
													</ComponentViewportProvider>
												</motion2.div>
											</motion2.div>,
											<motion2.div
												className={"framer-1eva3p3"}
												data-border={true}
												data-framer-name={"Task 5"}
												layoutDependency={layoutDependency}
												layoutId={"Mts0zADKe"}
												style={{
													"--border-bottom-width": "1px",
													"--border-color": "rgb(34, 34, 34)",
													"--border-left-width": "1px",
													"--border-right-width": "1px",
													"--border-style": "solid",
													"--border-top-width": "1px",
													borderBottomLeftRadius: 4,
													borderBottomRightRadius: 4,
													borderTopLeftRadius: 4,
													borderTopRightRadius: 4,
												}}
											>
												<motion2.div
													className={"framer-o3xble"}
													data-framer-name={"container"}
													layoutDependency={layoutDependency}
													layoutId={"E1ltBZz8h"}
												>
													<motion2.div
														className={"framer-vlzn0y"}
														data-framer-name={"Icon holder"}
														layoutDependency={layoutDependency}
														layoutId={"mPSfTAWwm"}
														style={{
															backgroundColor:
																"var(--token-cfb0af42-62a5-486a-837b-9870b5e7030b, rgba(255, 255, 255, 0.05))",
															borderBottomLeftRadius: 4,
															borderBottomRightRadius: 4,
															borderTopLeftRadius: 4,
															borderTopRightRadius: 4,
														}}
													>
														<ComponentViewportProvider>
															<SmartComponentScopedContainer
																className={"framer-1yjcyo1-container"}
																inComponentSlot={true}
																isAuthoredByUser={true}
																isModuleExternal={true}
																layoutDependency={layoutDependency}
																layoutId={"QMmJ5naeR-container"}
																nodeId={"QMmJ5naeR"}
																rendersWithMotion={true}
																scopeId={"jdFmL_6Wy"}
															>
																<Icon
																	color={
																		"var(--token-ea3f5ec2-80ec-412c-a26e-34872584c90c, rgb(255, 255, 255))"
																	}
																	height={"100%"}
																	iconSearch={"alarm"}
																	iconSelection={"House"}
																	id={"QMmJ5naeR"}
																	layoutId={"QMmJ5naeR"}
																	mirrored={false}
																	selectByList={false}
																	style={{
																		height: "100%",
																		width: "100%",
																	}}
																	weight={"regular"}
																	width={"100%"}
																/>
															</SmartComponentScopedContainer>
														</ComponentViewportProvider>
													</motion2.div>
													<motion2.div
														className={"framer-zgdoab"}
														data-framer-name={"task and status"}
														layoutDependency={layoutDependency}
														layoutId={"YblQSSP6p"}
													>
														<RichText
															__fromCanvasComponent={true}
															className={"framer-1qet0g2"}
															fonts={["Inter"]}
															layoutDependency={layoutDependency}
															layoutId={"zBKn6P3_p"}
															style={{
																"--framer-link-text-color": "rgb(0, 153, 255)",
																"--framer-link-text-decoration": "underline",
															}}
															verticalAlignment={"top"}
															withExternalLayout={true}
														>
															<React.Fragment>
																<motion2.p
																	className={"framer-styles-preset-1kdv3c8"}
																	data-styles-preset={"PDoVxFHq4"}
																>
																	{"Payment reminder"}
																</motion2.p>
															</React.Fragment>
														</RichText>
														<RichText
															__fromCanvasComponent={true}
															className={"framer-1vixal8"}
															fonts={["Inter"]}
															layoutDependency={layoutDependency}
															layoutId={"BO_x3QMwC"}
															style={{
																"--framer-link-text-color": "rgb(0, 153, 255)",
																"--framer-link-text-decoration": "underline",
															}}
															verticalAlignment={"top"}
															withExternalLayout={true}
														>
															<React.Fragment>
																<motion2.p
																	className={"framer-styles-preset-11j7728"}
																	data-styles-preset={"nWaHBmz7N"}
																>
																	{"sent to selected clients"}
																</motion2.p>
															</React.Fragment>
														</RichText>
													</motion2.div>
												</motion2.div>
												<motion2.div
													className={"framer-kbl212"}
													data-border={true}
													data-framer-name={"Icon holder"}
													layoutDependency={layoutDependency}
													layoutId={"SUp_CQF9L"}
													style={{
														"--border-bottom-width": "1px",
														"--border-color": "rgb(34, 34, 34)",
														"--border-left-width": "1px",
														"--border-right-width": "1px",
														"--border-style": "solid",
														"--border-top-width": "1px",
														backgroundColor:
															"var(--token-cfb0af42-62a5-486a-837b-9870b5e7030b, rgba(255, 255, 255, 0.05))",
														borderBottomLeftRadius: 4,
														borderBottomRightRadius: 4,
														borderTopLeftRadius: 4,
														borderTopRightRadius: 4,
													}}
												>
													<ComponentViewportProvider>
														<SmartComponentScopedContainer
															className={"framer-ft1s7v-container"}
															inComponentSlot={true}
															isAuthoredByUser={true}
															isModuleExternal={true}
															layoutDependency={layoutDependency}
															layoutId={"UH9GsasJA-container"}
															nodeId={"UH9GsasJA"}
															rendersWithMotion={true}
															scopeId={"jdFmL_6Wy"}
														>
															<Icon
																color={"rgba(129, 74, 200, 0.6)"}
																height={"100%"}
																iconSearch={"check"}
																iconSelection={"House"}
																id={"UH9GsasJA"}
																layoutId={"UH9GsasJA"}
																mirrored={false}
																selectByList={false}
																style={{
																	height: "100%",
																	width: "100%",
																}}
																weight={"bold"}
																width={"100%"}
															/>
														</SmartComponentScopedContainer>
													</ComponentViewportProvider>
												</motion2.div>
											</motion2.div>,
										]}
										speed={20}
										style={{
											height: "100%",
											width: "100%",
										}}
										width={"100%"}
									/>
								</SmartComponentScopedContainer>
							</ComponentViewportProvider>
						</motion2.div>
					</motion2.div>
				</Transition>
			</Variants>
		</LayoutGroup2>
	);
});
var css3 = [
	"@supports (aspect-ratio: 1) { body { --framer-aspect-ratio-supported: auto; } }",
	".framer-ExwGD.framer-astw87, .framer-ExwGD .framer-astw87 { display: block; }",
	".framer-ExwGD.framer-ln3v1j { align-content: center; align-items: center; display: flex; flex-direction: row; flex-wrap: nowrap; gap: 10px; height: 280px; justify-content: center; overflow: hidden; padding: 5px; position: relative; width: 280px; will-change: var(--framer-will-change-override, transform); }",
	".framer-ExwGD .framer-1rxw0h2 { align-content: center; align-items: center; display: flex; flex: 1 0 0px; flex-direction: column; flex-wrap: nowrap; gap: 10px; height: 100%; justify-content: center; overflow: hidden; padding: 10px; position: relative; width: 1px; }",
	".framer-ExwGD .framer-tlv8nn { align-content: center; align-items: center; display: flex; flex: none; flex-direction: row; flex-wrap: nowrap; gap: 5px; height: min-content; justify-content: flex-start; overflow: hidden; padding: 3px; position: relative; width: 100%; will-change: var(--framer-will-change-override, transform); }",
	".framer-ExwGD .framer-1ra5exm { align-content: center; align-items: center; align-self: stretch; display: flex; flex: none; flex-direction: row; flex-wrap: nowrap; gap: 10px; height: auto; justify-content: center; overflow: hidden; padding: 3px; position: relative; width: min-content; will-change: var(--framer-will-change-override, transform); }",
	".framer-ExwGD .framer-130kjbj, .framer-ExwGD .framer-1xhq8t5, .framer-ExwGD .framer-58oy1g, .framer-ExwGD .framer-1x1c25t, .framer-ExwGD .framer-i0zldt, .framer-ExwGD .framer-ua59wv, .framer-ExwGD .framer-1desya7, .framer-ExwGD .framer-13ozhny, .framer-ExwGD .framer-15m8jkk, .framer-ExwGD .framer-cf54ro, .framer-ExwGD .framer-1qet0g2, .framer-ExwGD .framer-1vixal8 { flex: none; height: auto; position: relative; white-space: pre; width: auto; }",
	".framer-ExwGD .framer-1316b2o, .framer-ExwGD .framer-1i179ot, .framer-ExwGD .framer-wvvrw1, .framer-ExwGD .framer-jm9llk, .framer-ExwGD .framer-1ucnb9s, .framer-ExwGD .framer-vlzn0y { align-content: center; align-items: center; display: flex; flex: none; flex-direction: row; flex-wrap: nowrap; gap: 10px; height: min-content; justify-content: center; overflow: hidden; padding: 5px; position: relative; width: min-content; will-change: var(--framer-will-change-override, transform); }",
	".framer-ExwGD .framer-1d7mg51-container { flex: 1 0 0px; height: 1px; position: relative; width: 100%; }",
	".framer-ExwGD .framer-1jg53mx, .framer-ExwGD .framer-s1hkb1, .framer-ExwGD .framer-g7r1jk, .framer-ExwGD .framer-12l9wgx, .framer-ExwGD .framer-1eva3p3 { align-content: center; align-items: center; display: flex; flex-direction: row; flex-wrap: nowrap; gap: 10px; height: min-content; justify-content: center; overflow: hidden; padding: 5px; position: relative; width: 240px; will-change: var(--framer-will-change-override, transform); }",
	".framer-ExwGD .framer-taqqe6, .framer-ExwGD .framer-1mbts4n, .framer-ExwGD .framer-1cmp3d, .framer-ExwGD .framer-1yxzbnf, .framer-ExwGD .framer-o3xble { align-content: center; align-items: center; display: flex; flex: 1 0 0px; flex-direction: row; flex-wrap: nowrap; gap: 7px; height: min-content; justify-content: flex-start; overflow: hidden; padding: 0px; position: relative; width: 1px; }",
	".framer-ExwGD .framer-5gi9jc-container, .framer-ExwGD .framer-dgyp8x-container, .framer-ExwGD .framer-43qumr-container, .framer-ExwGD .framer-18irzxm-container, .framer-ExwGD .framer-1yjcyo1-container { flex: none; height: 18px; position: relative; width: 18px; }",
	".framer-ExwGD .framer-1inctpy, .framer-ExwGD .framer-njueev, .framer-ExwGD .framer-h01jhb, .framer-ExwGD .framer-1g5ja9s, .framer-ExwGD .framer-zgdoab { align-content: flex-start; align-items: flex-start; display: flex; flex: none; flex-direction: column; flex-wrap: nowrap; gap: 6px; height: min-content; justify-content: center; overflow: hidden; padding: 0px; position: relative; width: min-content; }",
	".framer-ExwGD .framer-3hzraq, .framer-ExwGD .framer-1ebeee5, .framer-ExwGD .framer-1vkltkk, .framer-ExwGD .framer-vganpr, .framer-ExwGD .framer-kbl212 { align-content: center; align-items: center; display: flex; flex: none; flex-direction: row; flex-wrap: nowrap; gap: 10px; height: min-content; justify-content: center; overflow: hidden; padding: 1px; position: relative; width: min-content; will-change: var(--framer-will-change-override, transform); }",
	".framer-ExwGD .framer-15vkavw-container, .framer-ExwGD .framer-1k66nx3-container, .framer-ExwGD .framer-krulsk-container, .framer-ExwGD .framer-1d4948u-container, .framer-ExwGD .framer-ft1s7v-container { flex: none; height: 16px; position: relative; width: 16px; }",
	"@supports (background: -webkit-named-image(i)) and (not (font-palette:dark)) { .framer-ExwGD.framer-ln3v1j, .framer-ExwGD .framer-1rxw0h2, .framer-ExwGD .framer-tlv8nn, .framer-ExwGD .framer-1ra5exm, .framer-ExwGD .framer-1316b2o, .framer-ExwGD .framer-1jg53mx, .framer-ExwGD .framer-taqqe6, .framer-ExwGD .framer-1i179ot, .framer-ExwGD .framer-1inctpy, .framer-ExwGD .framer-3hzraq, .framer-ExwGD .framer-s1hkb1, .framer-ExwGD .framer-1mbts4n, .framer-ExwGD .framer-wvvrw1, .framer-ExwGD .framer-njueev, .framer-ExwGD .framer-1ebeee5, .framer-ExwGD .framer-g7r1jk, .framer-ExwGD .framer-1cmp3d, .framer-ExwGD .framer-jm9llk, .framer-ExwGD .framer-h01jhb, .framer-ExwGD .framer-1vkltkk, .framer-ExwGD .framer-12l9wgx, .framer-ExwGD .framer-1yxzbnf, .framer-ExwGD .framer-1ucnb9s, .framer-ExwGD .framer-1g5ja9s, .framer-ExwGD .framer-vganpr, .framer-ExwGD .framer-1eva3p3, .framer-ExwGD .framer-o3xble, .framer-ExwGD .framer-vlzn0y, .framer-ExwGD .framer-zgdoab, .framer-ExwGD .framer-kbl212 { gap: 0px; } .framer-ExwGD.framer-ln3v1j > *, .framer-ExwGD .framer-1ra5exm > *, .framer-ExwGD .framer-1316b2o > *, .framer-ExwGD .framer-1jg53mx > *, .framer-ExwGD .framer-1i179ot > *, .framer-ExwGD .framer-3hzraq > *, .framer-ExwGD .framer-s1hkb1 > *, .framer-ExwGD .framer-wvvrw1 > *, .framer-ExwGD .framer-1ebeee5 > *, .framer-ExwGD .framer-g7r1jk > *, .framer-ExwGD .framer-jm9llk > *, .framer-ExwGD .framer-1vkltkk > *, .framer-ExwGD .framer-12l9wgx > *, .framer-ExwGD .framer-1ucnb9s > *, .framer-ExwGD .framer-vganpr > *, .framer-ExwGD .framer-1eva3p3 > *, .framer-ExwGD .framer-vlzn0y > *, .framer-ExwGD .framer-kbl212 > * { margin: 0px; margin-left: calc(10px / 2); margin-right: calc(10px / 2); } .framer-ExwGD.framer-ln3v1j > :first-child, .framer-ExwGD .framer-tlv8nn > :first-child, .framer-ExwGD .framer-1ra5exm > :first-child, .framer-ExwGD .framer-1316b2o > :first-child, .framer-ExwGD .framer-1jg53mx > :first-child, .framer-ExwGD .framer-taqqe6 > :first-child, .framer-ExwGD .framer-1i179ot > :first-child, .framer-ExwGD .framer-3hzraq > :first-child, .framer-ExwGD .framer-s1hkb1 > :first-child, .framer-ExwGD .framer-1mbts4n > :first-child, .framer-ExwGD .framer-wvvrw1 > :first-child, .framer-ExwGD .framer-1ebeee5 > :first-child, .framer-ExwGD .framer-g7r1jk > :first-child, .framer-ExwGD .framer-1cmp3d > :first-child, .framer-ExwGD .framer-jm9llk > :first-child, .framer-ExwGD .framer-1vkltkk > :first-child, .framer-ExwGD .framer-12l9wgx > :first-child, .framer-ExwGD .framer-1yxzbnf > :first-child, .framer-ExwGD .framer-1ucnb9s > :first-child, .framer-ExwGD .framer-vganpr > :first-child, .framer-ExwGD .framer-1eva3p3 > :first-child, .framer-ExwGD .framer-o3xble > :first-child, .framer-ExwGD .framer-vlzn0y > :first-child, .framer-ExwGD .framer-kbl212 > :first-child { margin-left: 0px; } .framer-ExwGD.framer-ln3v1j > :last-child, .framer-ExwGD .framer-tlv8nn > :last-child, .framer-ExwGD .framer-1ra5exm > :last-child, .framer-ExwGD .framer-1316b2o > :last-child, .framer-ExwGD .framer-1jg53mx > :last-child, .framer-ExwGD .framer-taqqe6 > :last-child, .framer-ExwGD .framer-1i179ot > :last-child, .framer-ExwGD .framer-3hzraq > :last-child, .framer-ExwGD .framer-s1hkb1 > :last-child, .framer-ExwGD .framer-1mbts4n > :last-child, .framer-ExwGD .framer-wvvrw1 > :last-child, .framer-ExwGD .framer-1ebeee5 > :last-child, .framer-ExwGD .framer-g7r1jk > :last-child, .framer-ExwGD .framer-1cmp3d > :last-child, .framer-ExwGD .framer-jm9llk > :last-child, .framer-ExwGD .framer-1vkltkk > :last-child, .framer-ExwGD .framer-12l9wgx > :last-child, .framer-ExwGD .framer-1yxzbnf > :last-child, .framer-ExwGD .framer-1ucnb9s > :last-child, .framer-ExwGD .framer-vganpr > :last-child, .framer-ExwGD .framer-1eva3p3 > :last-child, .framer-ExwGD .framer-o3xble > :last-child, .framer-ExwGD .framer-vlzn0y > :last-child, .framer-ExwGD .framer-kbl212 > :last-child { margin-right: 0px; } .framer-ExwGD .framer-1rxw0h2 > * { margin: 0px; margin-bottom: calc(10px / 2); margin-top: calc(10px / 2); } .framer-ExwGD .framer-1rxw0h2 > :first-child, .framer-ExwGD .framer-1inctpy > :first-child, .framer-ExwGD .framer-njueev > :first-child, .framer-ExwGD .framer-h01jhb > :first-child, .framer-ExwGD .framer-1g5ja9s > :first-child, .framer-ExwGD .framer-zgdoab > :first-child { margin-top: 0px; } .framer-ExwGD .framer-1rxw0h2 > :last-child, .framer-ExwGD .framer-1inctpy > :last-child, .framer-ExwGD .framer-njueev > :last-child, .framer-ExwGD .framer-h01jhb > :last-child, .framer-ExwGD .framer-1g5ja9s > :last-child, .framer-ExwGD .framer-zgdoab > :last-child { margin-bottom: 0px; } .framer-ExwGD .framer-tlv8nn > * { margin: 0px; margin-left: calc(5px / 2); margin-right: calc(5px / 2); } .framer-ExwGD .framer-taqqe6 > *, .framer-ExwGD .framer-1mbts4n > *, .framer-ExwGD .framer-1cmp3d > *, .framer-ExwGD .framer-1yxzbnf > *, .framer-ExwGD .framer-o3xble > * { margin: 0px; margin-left: calc(7px / 2); margin-right: calc(7px / 2); } .framer-ExwGD .framer-1inctpy > *, .framer-ExwGD .framer-njueev > *, .framer-ExwGD .framer-h01jhb > *, .framer-ExwGD .framer-1g5ja9s > *, .framer-ExwGD .framer-zgdoab > * { margin: 0px; margin-bottom: calc(6px / 2); margin-top: calc(6px / 2); } }",
	...css2,
	...css,
	'.framer-ExwGD[data-border="true"]::after, .framer-ExwGD [data-border="true"]::after { content: ""; border-width: var(--border-top-width, 0) var(--border-right-width, 0) var(--border-bottom-width, 0) var(--border-left-width, 0); border-color: var(--border-color, none); border-style: var(--border-style, none); width: 100%; height: 100%; position: absolute; box-sizing: border-box; left: 0; top: 0; border-radius: inherit; pointer-events: none; }',
];
var FramerjdFmL_6Wy = withCSS(Component, css3, "framer-ExwGD");
var stdin_default = FramerjdFmL_6Wy;
FramerjdFmL_6Wy.displayName = "workflow automation";
FramerjdFmL_6Wy.defaultProps = {
	height: 280,
	width: 280,
};
addFonts(
	FramerjdFmL_6Wy,
	[
		{
			explicitInter: true,
			fonts: [
				{
					family: "Inter",
					source: "framer",
					style: "normal",
					unicodeRange:
						"U+0460-052F, U+1C80-1C88, U+20B4, U+2DE0-2DFF, U+A640-A69F, U+FE2E-FE2F",
					url: "https://framerusercontent.com/assets/5vvr9Vy74if2I6bQbJvbw7SY1pQ.woff2",
					weight: "400",
				},
				{
					family: "Inter",
					source: "framer",
					style: "normal",
					unicodeRange: "U+0301, U+0400-045F, U+0490-0491, U+04B0-04B1, U+2116",
					url: "https://framerusercontent.com/assets/EOr0mi4hNtlgWNn9if640EZzXCo.woff2",
					weight: "400",
				},
				{
					family: "Inter",
					source: "framer",
					style: "normal",
					unicodeRange: "U+1F00-1FFF",
					url: "https://framerusercontent.com/assets/Y9k9QrlZAqio88Klkmbd8VoMQc.woff2",
					weight: "400",
				},
				{
					family: "Inter",
					source: "framer",
					style: "normal",
					unicodeRange: "U+0370-03FF",
					url: "https://framerusercontent.com/assets/OYrD2tBIBPvoJXiIHnLoOXnY9M.woff2",
					weight: "400",
				},
				{
					family: "Inter",
					source: "framer",
					style: "normal",
					unicodeRange:
						"U+0100-024F, U+0259, U+1E00-1EFF, U+2020, U+20A0-20AB, U+20AD-20CF, U+2113, U+2C60-2C7F, U+A720-A7FF",
					url: "https://framerusercontent.com/assets/JeYwfuaPfZHQhEG8U5gtPDZ7WQ.woff2",
					weight: "400",
				},
				{
					family: "Inter",
					source: "framer",
					style: "normal",
					unicodeRange:
						"U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD",
					url: "https://framerusercontent.com/assets/vQyevYAyHtARFwPqUzQGpnDs.woff2",
					weight: "400",
				},
				{
					family: "Inter",
					source: "framer",
					style: "normal",
					unicodeRange:
						"U+0102-0103, U+0110-0111, U+0128-0129, U+0168-0169, U+01A0-01A1, U+01AF-01B0, U+1EA0-1EF9, U+20AB",
					url: "https://framerusercontent.com/assets/b6Y37FthZeALduNqHicBT6FutY.woff2",
					weight: "400",
				},
			],
		},
		...PhosphorFonts,
		...TickerFonts,
		...getFontsFromSharedStyle(fonts2),
		...getFontsFromSharedStyle(fonts),
	],
	{
		supportsExplicitInterCodegen: true,
	},
);

// virtual:workflow-automation
import { WithFramerBreakpoints } from "unframer";
import { jsx } from "react/jsx-runtime";
var locales = [];
var defaultResponsiveVariants = {};
/** @type {function(Props): any} */
function ComponentWithRoot({ locale, ...rest }) {
	return (
		<ContextProviders
			routes={routes}
			framerSiteId={
				"a8d1bf17543235875742a4578f1d6b2cd82ea3d1960d650561752b6f8ce8433b"
			}
			locale={locale}
			locales={locales}
		>
			{jsx(stdin_default, {
				...rest,
			})}
		</ContextProviders>
	);
}
/**
 * Renders WorkflowAutomationFramerComponent for all breakpoints with a variants map. Variant prop is inferred per breakpoint.
 * @function
 * @param {Omit<Props, 'variant'> & {variants?: VariantsMap}} props
 * @returns {any}
 */
ComponentWithRoot.Responsive = ({ locale, ...rest }) => {
	return (
		<ContextProviders
			routes={routes}
			framerSiteId={
				"a8d1bf17543235875742a4578f1d6b2cd82ea3d1960d650561752b6f8ce8433b"
			}
			locale={locale}
			locales={locales}
		>
			<WithFramerBreakpoints
				Component={stdin_default}
				variants={defaultResponsiveVariants}
				{...rest}
			/>
		</ContextProviders>
	);
};
Object.assign(ComponentWithRoot, stdin_default);
var workflow_automation_default = ComponentWithRoot;
export { workflow_automation_default as default };
